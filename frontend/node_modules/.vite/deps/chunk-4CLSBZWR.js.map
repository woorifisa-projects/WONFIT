{
  "version": 3,
  "sources": ["../../vuetify/src/composables/variant.tsx"],
  "sourcesContent": ["// Composables\nimport { useColor } from '@/composables/color'\n\n// Utilities\nimport { computed, unref } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport const allowedVariants = [\n  'elevated',\n  'flat',\n  'tonal',\n  'outlined',\n  'text',\n  'plain',\n] as const\n\nexport type Variant = typeof allowedVariants[number]\n\nexport interface VariantProps {\n  color?: string\n  variant: Variant\n}\n\nexport function genOverlays (isClickable: boolean, name: string) {\n  return (\n    <>\n      { isClickable && <span key=\"overlay\" class={ `${name}__overlay` } /> }\n\n      <span key=\"underlay\" class={ `${name}__underlay` } />\n    </>\n  )\n}\n\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'elevated',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n}, 'variant')\n\nexport function useVariant (\n  props: MaybeRef<VariantProps>,\n  name = getCurrentInstanceName(),\n) {\n  const variantClasses = computed(() => {\n    const { variant } = unref(props)\n    return `${name}--variant-${variant}`\n  })\n\n  const { colorClasses, colorStyles } = useColor(computed(() => {\n    const { variant, color } = unref(props)\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color,\n    }\n  }))\n\n  return { colorClasses, colorStyles, variantClasses }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAWO,IAAMA,kBAAkB,CAC7B,YACA,QACA,SACA,YACA,QACA,OAAO;AAUF,SAASC,YAAaC,aAAsBC,MAAc;AAC/D,SAAAC,YAAAC,UAAA,MAAA,CAEMH,eAAWE,YAAA,QAAA;IAAA,OAAc;IAAS,SAAU,GAAED,IAAK;EAAU,GAAA,IAAA,GAAKC,YAAA,QAAA;IAAA,OAE1D;IAAU,SAAU,GAAED,IAAK;EAAW,GAAA,IAAA,CAAA,CAAA;AAGtD;AAEO,IAAMG,mBAAmBC,aAAa;EAC3CC,OAAOC;EACPC,SAAS;IACPC,MAAMF;IACNG,SAAS;IACTC,WAAYC,OAAWd,gBAAgBe,SAASD,CAAC;EACnD;AACF,GAAG,SAAS;AAEL,SAASE,WACdC,OAEA;AAAA,MADAd,OAAIe,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAGG,uBAAsB;AAE7B,QAAMC,iBAAiBC,SAAS,MAAM;AACpC,UAAM;MAAEb;IAAQ,IAAIc,MAAMP,KAAK;AAC/B,WAAQ,GAAEd,IAAK,aAAYO,OAAQ;EACrC,CAAC;AAED,QAAM;IAAEe;IAAcC;EAAY,IAAIC,SAASJ,SAAS,MAAM;AAC5D,UAAM;MAAEb;MAASF;IAAM,IAAIgB,MAAMP,KAAK;AACtC,WAAO;MACL,CAAC,CAAC,YAAY,MAAM,EAAEF,SAASL,OAAO,IAAI,eAAe,MAAM,GAAGF;IACpE;EACF,CAAC,CAAC;AAEF,SAAO;IAAEiB;IAAcC;IAAaJ;EAAe;AACrD;",
  "names": ["allowedVariants", "genOverlays", "isClickable", "name", "_createVNode", "_Fragment", "makeVariantProps", "propsFactory", "color", "String", "variant", "type", "default", "validator", "v", "includes", "useVariant", "props", "arguments", "length", "undefined", "getCurrentInstanceName", "variantClasses", "computed", "unref", "colorClasses", "colorStyles", "useColor"]
}
