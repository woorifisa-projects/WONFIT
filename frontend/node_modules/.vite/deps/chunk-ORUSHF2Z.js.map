{
  "version": 3,
  "sources": ["../../vuetify/src/composables/layout.ts"],
  "sourcesContent": ["// Composables\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  onActivated,\n  onBeforeUnmount,\n  onDeactivated,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowRef,\n} from 'vue'\nimport { convertToUnit, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, CSSProperties, InjectionKey, Prop, Ref } from 'vue'\n\ntype Position = 'top' | 'left' | 'right' | 'bottom'\n\ninterface Layer {\n  top: number\n  bottom: number\n  left: number\n  right: number\n}\n\ninterface LayoutItem extends Layer {\n  id: string\n  size: number\n  position: Position\n}\n\ninterface LayoutProvide {\n  register: (\n    vm: ComponentInternalInstance,\n    options: {\n      id: string\n      order: Ref<number>\n      position: Ref<Position>\n      layoutSize: Ref<number | string>\n      elementSize: Ref<number | string | undefined>\n      active: Ref<boolean>\n      disableTransitions?: Ref<boolean>\n      absolute: Ref<boolean | undefined>\n    }\n  ) => {\n    layoutItemStyles: Ref<CSSProperties>\n    layoutItemScrimStyles: Ref<CSSProperties>\n    zIndex: Ref<number>\n  }\n  unregister: (id: string) => void\n  mainRect: Ref<Layer>\n  mainStyles: Ref<CSSProperties>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n  layoutRect: Ref<DOMRectReadOnly | undefined>\n  rootZIndex: Ref<number>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\nexport const VuetifyLayoutItemKey: InjectionKey<{ id: string }> = Symbol.for('vuetify:layout-item')\n\nconst ROOT_ZINDEX = 1000\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n}, 'layout')\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  order: {\n    type: [Number, String],\n    default: 0,\n  },\n  absolute: Boolean,\n}, 'layout-item')\n\nexport function useLayout () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  return {\n    getLayoutItem: layout.getLayoutItem,\n    mainRect: layout.mainRect,\n    mainStyles: layout.mainStyles,\n  }\n}\n\nexport function useLayoutItem (options: {\n  id: string | undefined\n  order: Ref<number>\n  position: Ref<Position>\n  layoutSize: Ref<number | string>\n  elementSize: Ref<number | string | undefined>\n  active: Ref<boolean>\n  disableTransitions?: Ref<boolean>\n  absolute: Ref<boolean | undefined>\n}) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  const id = options.id ?? `layout-item-${getUid()}`\n\n  const vm = getCurrentInstance('useLayoutItem')\n\n  provide(VuetifyLayoutItemKey, { id })\n\n  const isKeptAlive = shallowRef(false)\n  onDeactivated(() => isKeptAlive.value = true)\n  onActivated(() => isKeptAlive.value = false)\n\n  const {\n    layoutItemStyles,\n    layoutItemScrimStyles,\n  } = layout.register(vm, {\n    ...options,\n    active: computed(() => isKeptAlive.value ? false : options.active.value),\n    id,\n  })\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return { layoutItemStyles, layoutRect: layout.layoutRect, layoutItemScrimStyles }\n}\n\nconst generateLayers = (\n  layout: string[],\n  positions: Map<string, Ref<Position>>,\n  layoutSizes: Map<string, Ref<number | string>>,\n  activeItems: Map<string, Ref<boolean>>,\n): { id: string, layer: Layer }[] => {\n  let previousLayer: Layer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  for (const id of layout) {\n    const position = positions.get(id)\n    const amount = layoutSizes.get(id)\n    const active = activeItems.get(id)\n    if (!position || !amount || !active) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\nexport function createLayout (props: { overlaps?: string[], fullHeight?: boolean }) {\n  const parentLayout = inject(VuetifyLayoutKey, null)\n  const rootZIndex = computed(() => parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX)\n  const registered = ref<string[]>([])\n  const positions = reactive(new Map<string, Ref<Position>>())\n  const layoutSizes = reactive(new Map<string, Ref<number | string>>())\n  const priorities = reactive(new Map<string, Ref<number>>())\n  const activeItems = reactive(new Map<string, Ref<boolean>>())\n  const disabledTransitions = reactive(new Map<string, Ref<boolean>>())\n  const { resizeRef, contentRect: layoutRect } = useResizeObserver()\n\n  const computedOverlaps = computed(() => {\n    const map = new Map<string, { position: Position, amount: number }>()\n    const overlaps = props.overlaps ?? []\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':')\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue\n\n      const topPosition = positions.get(top)\n      const bottomPosition = positions.get(bottom)\n      const topAmount = layoutSizes.get(top)\n      const bottomAmount = layoutSizes.get(bottom)\n\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue\n\n      map.set(bottom, { position: topPosition.value, amount: parseInt(topAmount.value, 10) })\n      map.set(top, { position: bottomPosition.value, amount: -parseInt(bottomAmount.value, 10) })\n    }\n\n    return map\n  })\n\n  const layers = computed(() => {\n    const uniquePriorities = [...new Set([...priorities.values()].map(p => p.value))].sort((a, b) => a - b)\n    const layout = []\n    for (const p of uniquePriorities) {\n      const items = registered.value.filter(id => priorities.get(id)?.value === p)\n      layout.push(...items)\n    }\n    return generateLayers(layout, positions, layoutSizes, activeItems)\n  })\n\n  const transitionsEnabled = computed(() => {\n    return !Array.from(disabledTransitions.values()).some(ref => ref.value)\n  })\n\n  const mainRect = computed(() => {\n    return layers.value[layers.value.length - 1].layer\n  })\n\n  const mainStyles = computed<CSSProperties>(() => {\n    return {\n      '--v-layout-left': convertToUnit(mainRect.value.left),\n      '--v-layout-right': convertToUnit(mainRect.value.right),\n      '--v-layout-top': convertToUnit(mainRect.value.top),\n      '--v-layout-bottom': convertToUnit(mainRect.value.bottom),\n      ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n    }\n  })\n\n  const items = computed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = layoutSizes.get(id)\n      const position = positions.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n        position: position!.value,\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  const rootVm = getCurrentInstance('createLayout')\n\n  const isMounted = shallowRef(false)\n  onMounted(() => {\n    isMounted.value = true\n  })\n\n  provide(VuetifyLayoutKey, {\n    register: (\n      vm: ComponentInternalInstance,\n      {\n        id,\n        order,\n        position,\n        layoutSize,\n        elementSize,\n        active,\n        disableTransitions,\n        absolute,\n      }\n    ) => {\n      priorities.set(id, order)\n      positions.set(id, position)\n      layoutSizes.set(id, layoutSize)\n      activeItems.set(id, active)\n      disableTransitions && disabledTransitions.set(id, disableTransitions)\n\n      const instances = findChildrenWithProvide(VuetifyLayoutItemKey, rootVm?.vnode)\n      const instanceIndex = instances.indexOf(vm)\n\n      if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id)\n      else registered.value.push(id)\n\n      const index = computed(() => items.value.findIndex(i => i.id === id))\n      const zIndex = computed(() => rootZIndex.value + (layers.value.length * 2) - (index.value * 2))\n\n      const layoutItemStyles = computed<CSSProperties>(() => {\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOppositeHorizontal = position.value === 'right'\n        const isOppositeVertical = position.value === 'bottom'\n\n        const styles = {\n          [position.value]: 0,\n          zIndex: zIndex.value,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -110) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}%)`,\n          position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? 'absolute' : 'fixed',\n          ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n        } as const\n\n        if (!isMounted.value) return styles\n\n        const item = items.value[index.value]\n\n        if (!item) throw new Error(`[Vuetify] Could not find layout item \"${id}\"`)\n\n        const overlap = computedOverlaps.value.get(id)\n        if (overlap) {\n          item[overlap.position] += overlap.amount\n        }\n\n        return {\n          ...styles,\n          height:\n            isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n          left: isOppositeHorizontal ? undefined : `${item.left}px`,\n          right: isOppositeHorizontal ? `${item.right}px` : undefined,\n          top: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          bottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width:\n            !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n        }\n      })\n\n      const layoutItemScrimStyles = computed<CSSProperties>(() => ({\n        zIndex: zIndex.value - 1,\n      }))\n\n      return { layoutItemStyles, layoutItemScrimStyles, zIndex }\n    },\n    unregister: (id: string) => {\n      priorities.delete(id)\n      positions.delete(id)\n      layoutSizes.delete(id)\n      activeItems.delete(id)\n      disabledTransitions.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainRect,\n    mainStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    rootZIndex,\n  })\n\n  const layoutClasses = computed(() => [\n    'v-layout',\n    { 'v-layout--full-height': props.fullHeight },\n  ])\n\n  const layoutStyles = computed(() => ({\n    zIndex: rootZIndex.value,\n    position: parentLayout ? 'relative' as const : undefined,\n    overflow: parentLayout ? 'hidden' : undefined,\n  }))\n\n  return {\n    layoutClasses,\n    layoutStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    layoutRef: resizeRef,\n  }\n}\n"],
  "mappings": "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",
  "names": ["VuetifyLayoutKey", "Symbol", "for", "VuetifyLayoutItemKey", "ROOT_ZINDEX", "makeLayoutProps", "propsFactory", "overlaps", "type", "Array", "default", "fullHeight", "Boolean", "makeLayoutItemProps", "name", "String", "order", "Number", "absolute", "useLayout", "layout", "inject", "Error", "getLayoutItem", "mainRect", "mainStyles", "useLayoutItem", "options", "id", "getUid", "vm", "getCurrentInstance", "provide", "isKeptAlive", "shallowRef", "onDeactivated", "value", "onActivated", "layoutItemStyles", "layoutItemScrimStyles", "register", "active", "computed", "onBeforeUnmount", "unregister", "layoutRect", "generateLayers", "positions", "layoutSizes", "activeItems", "previousLayer", "top", "left", "right", "bottom", "layers", "layer", "position", "get", "amount", "parseInt", "push", "createLayout", "props", "parentLayout", "rootZIndex", "registered", "ref", "reactive", "Map", "priorities", "disabledTransitions", "resizeRef", "contentRect", "useResizeObserver", "computedOverlaps", "map", "overlap", "filter", "item", "includes", "split", "topPosition", "bottomPosition", "topAmount", "bottomAmount", "set", "uniquePriorities", "Set", "values", "p", "sort", "a", "b", "items", "transitionsEnabled", "from", "some", "length", "convertToUnit", "undefined", "transition", "slice", "_ref", "index", "size", "find", "rootVm", "isMounted", "onMounted", "_ref2", "layoutSize", "elementSize", "disableTransitions", "instances", "findChildrenWithProvide", "vnode", "instanceIndex", "indexOf", "splice", "findIndex", "i", "zIndex", "isHorizontal", "isOppositeHorizontal", "isOppositeVertical", "styles", "transform", "height", "width", "delete", "v", "layoutClasses", "layoutStyles", "overflow", "layoutRef"]
}
