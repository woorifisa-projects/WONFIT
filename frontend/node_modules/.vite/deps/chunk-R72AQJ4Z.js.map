{
  "version": 3,
  "sources": ["../../vuetify/src/composables/resizeObserver.ts"],
  "sourcesContent": ["// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue'\nimport { refElement } from '@/util'\nimport { IN_BROWSER } from '@/util/globals'\n\n// Types\nimport type { DeepReadonly, Ref } from 'vue'\n\ninterface ResizeState {\n  resizeRef: Ref<HTMLElement | undefined>\n  contentRect: DeepReadonly<Ref<DOMRectReadOnly | undefined>>\n}\n\nexport function useResizeObserver (callback?: ResizeObserverCallback, box: 'content' | 'border' = 'content'): ResizeState {\n  const resizeRef = ref<HTMLElement>()\n  const contentRect = ref<DOMRectReadOnly>()\n\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      callback?.(entries, observer)\n\n      if (!entries.length) return\n\n      if (box === 'content') {\n        contentRect.value = entries[0].contentRect\n      } else {\n        contentRect.value = entries[0].target.getBoundingClientRect()\n      }\n    })\n\n    onBeforeUnmount(() => {\n      observer.disconnect()\n    })\n\n    watch(resizeRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(refElement(oldValue))\n        contentRect.value = undefined\n      }\n\n      if (newValue) observer.observe(refElement(newValue))\n    }, {\n      flush: 'post',\n    })\n  }\n\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAaO,SAASA,kBAAmBC,UAAuF;AAAA,MAApDC,MAAyBC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAChG,QAAMG,YAAYC,IAAG;AACrB,QAAMC,cAAcD,IAAG;AAEvB,MAAIE,YAAY;AACd,UAAMC,WAAW,IAAIC,eAAgBC,aAAmC;AACtEX,2CAAWW,SAASF;AAEpB,UAAI,CAACE,QAAQR;AAAQ;AAErB,UAAIF,QAAQ,WAAW;AACrBM,oBAAYK,QAAQD,QAAQ,CAAC,EAAEJ;MACjC,OAAO;AACLA,oBAAYK,QAAQD,QAAQ,CAAC,EAAEE,OAAOC,sBAAqB;MAC7D;IACF,CAAC;AAEDC,oBAAgB,MAAM;AACpBN,eAASO,WAAU;IACrB,CAAC;AAEDC,UAAMZ,WAAW,CAACa,UAAUC,aAAa;AACvC,UAAIA,UAAU;AACZV,iBAASW,UAAUC,WAAWF,QAAQ,CAAC;AACvCZ,oBAAYK,QAAQR;MACtB;AAEA,UAAIc;AAAUT,iBAASa,QAAQD,WAAWH,QAAQ,CAAC;IACrD,GAAG;MACDK,OAAO;IACT,CAAC;EACH;AAEA,SAAO;IACLlB;IACAE,aAAaiB,SAASjB,WAAW;EACnC;AACF;",
  "names": ["useResizeObserver", "callback", "box", "arguments", "length", "undefined", "resizeRef", "ref", "contentRect", "IN_BROWSER", "observer", "ResizeObserver", "entries", "value", "target", "getBoundingClientRect", "onBeforeUnmount", "disconnect", "watch", "newValue", "oldValue", "unobserve", "refElement", "observe", "flush", "readonly"]
}
